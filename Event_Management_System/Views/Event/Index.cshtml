@using System.Security.Claims
@model List<Event>

<h2>Events</h2>
@if (User.Identity.IsAuthenticated)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<table class="table" id="EventTable">
    <thead>
        <tr>
            <th>Title</th>
            <th>Date</th>
            <th>Time</th>
            <th>Location</th>
            <th>Organizer</th>
            <th>Category</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Date)</td>
                <td>@Html.DisplayFor(modelItem => item.Time)</td>
                <td>@Html.DisplayFor(modelItem => item.Location)</td>
                <td>@Html.DisplayFor(modelItem => item.Organizer.FirstName) @Html.DisplayFor(modelItem => item.Organizer.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.EventCategory.Name)</td>
                <td>
                    @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == item.OrganizerId)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit | </a>
                        <a asp-action="Delete" asp-route-id="@item.Id"> Delete | </a>
                    }
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a asp-action="Details" asp-route-id="@item.Id"> Details</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <h2>Participants Chart</h2>
    <canvas id="participantsChart" width="400" height="200"></canvas>
</div>



@section Scripts {
    <script>
        function fetchParticipantsData() {
            fetch('/api/Chart/ParticipantsData')
                .then(response => response.json())
                .then(data => renderChart(data))
                .catch(error => console.error('Error fetching participants data:', error));
        }

        function renderChart(participantsData) {
            var ctx = document.getElementById('participantsChart').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: Object.keys(participantsData),
                    datasets: [{
                        label: 'Participants Count',
                        data: Object.values(participantsData),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        fetchParticipantsData();
    </script>
}
